;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon Oct 13 2025
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
DATA SEGMENT
      PORTA	 EQU 	0F0H
      PORTB	 EQU 	0F2H
      PORTC	 EQU 	0F4H
      COMREG     EQU 	0F6H
      COMBYTE   EQU  	10001001B
      
      ONES_DIGIT 	DB		0H
      TENS_DIGIT	DB		0H

DATA ENDS

CODE    SEGMENT PUBLIC 'CODE'
        ASSUME CS:CODE, DS:DATA
	
	ORG 0000H

START:
	 
	 
	 INIT_8255:
	       MOV DX, COMREG
	       MOV AL, COMBYTE
	       OUT DX, AL
	       
	  CHECK_INPUT:
	       MOV DX, PORTC
	       IN AL, DX       
	       
	       CMP AL, 01H
	       JE TOGGLE
	       
	       CMP AL, 00000010B
	       JE SNAKE
	       
	       CMP AL, 00000100B
	        JE CYCLONE
		
		CMP AL, 00001000B
		JE ENABLE_INCREMENT
		
		
		CMP AL, 00010000B
		;JE RESET
	       
	       JMP OFF
	       
	    
	    TOGGLE:
		 MOV DX, PORTA
		 MOV AL, 0FFH
		 OUT DX, AL
		  
		  JMP CHECK_INPUT
		  
	    SNAKE:
		  ; 0-1   1-2   2-3  3-7        7-6  6-5  5-4     4-0
		  MOV DX, PORTA
		  MOV AL, 00000011B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 00000110B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 00001100B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 10001000B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 11000000B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 01100000B
		  OUT DX, AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 00110000B
		  OUT DX, AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 00010001B
		  OUT DX, AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  JMP CHECK_INPUT
	       
	     CYCLONE:
		  ; 1 2    0 3     4 7   5 6
		  MOV DX, PORTA
		  MOV AL, 00000110B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 00001001B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 10010000B
		  OUT DX,AL
		  CALL DELAY
		   CALL CHECK_OFF
		  
		  MOV DX, PORTA
		  MOV AL, 01100000B
		  OUT DX,AL
		  CALL DELAY
		  CALL CHECK_OFF
		  
		  JMP CHECK_INPUT
		  
		  
		  
		 ; for increment
	      ENABLE_INCREMENT:
		     MOV AL,TENS_DIGIT
		     AND AL, 0FH
		     MOV BL, AL
		     
		     MOV AL, ONES_DIGIT
		     MOV CL, 4
		     SHL AL, CL
		     
		     OR AL, BL ; combine both lower nibble of tens digit and upper nibble of ones digit
		     
		     MOV DX, PORTB ;display initially
		     OUT DX, AL
		     
		     CALL DELAY
		     CALL CHECK_STATUS
		     
		     
		     ;INCREMENT COUNTER
		     INC ONES_DIGIT
		     MOV AL, ONES_DIGIT
		     ; compare if equal to 10
		     CMP AL, 10
		     JNE ENABLE_INCREMENT
		     MOV ONES_DIGIT, 0
		     
		     ;ones reached 10 so increment tens
		     INC TENS_DIGIT
		     MOV AL, TENS_DIGIT
		     ;compare if reached ten, if not , loop again
		     CMP AL,10
		     JNE ENABLE_INCREMENT
		     
		     JMP RESET_COUNTER
		  
		  
	     OFF: 
		  MOV DX, PORTA
		  MOV AL, 00000000B
		  OUT DX, AL
		  
		  JMP CHECK_INPUT
	       
	    DELAY:
	       MOV BX, 0AAAAAH
	       _WAIT:
		  DEC BX
		  NOP
		  JNZ _WAIT
		  RET
		
	     CHECK_OFF:
		  MOV DX, PORTC
		  IN AL, DX
		  
		  CMP AL, 00H
		  JE OFF
		  
		  ret
		  
	      CHECK_STATUS:
		     MOV DX, PORTC
		     IN AL, DX
		     
		     CMP  AL, 00000000B
		     JE OFF_COUNTER
		     
		     CMP AL, 00011000B
		     JE RESET_COUNTER
		     
		     ret
		     
	       OFF_COUNTER:
		     MOV DX, PORTB
		     MOV AL, 00000000B
		     OUT DX, AL
		     
		     JMP CHECK_INPUT
		     
	       RESET_COUNTER:
		     MOV ONES_DIGIT, 0
		     MOV TENS_DIGIT, 0
		     JMP ENABLE_INCREMENT
		     
        ENDLESS:
        JMP ENDLESS
CODE    ENDS
        END START