;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Wed Oct 8 2025
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
DATA SEGMENT

   LED EQU 0F0H
   SEG_PORT EQU 0F2H
   INPUT EQU 0F4H
   
   DIGITS DB 00111111B, 00000110B, 01011011B, 01001111B
           DB 01100110B, 01101101B, 01111101B, 00000111B
           DB 01111111B, 01101111B
	   
   DIGITSBALI DB 01101111B, 01111111B, 00000111B, 01111101B, 01101101B, 01100110B, 01001111B, 01011011B,  00000110B, 00111111B
DATA ENDS
CODE    SEGMENT 
        ASSUME CS:CODE, DS:DATA
	 ORG 0000H
START:
        ;initialize ds
	mov ax, DATA
	mov ds, ax
	
	;clear outputs
	mov dx, LED
	mov al, 00h
	out dx, al
	
	mov dx, SEG_PORT
	XOR AL, AL
	out dx, al
	
	
MAIN:
   mov dx, INPUT
   in al, dx
   
   cmp al, 00000001b
   je ledmode
   
   cmp al, 00000010b
   je ledmode2
   
   cmp al, 00000100b
   je segmode
   
   cmp al, 00001000b
   je segmode2
   
   cmp al, 00010000b
   je converge
   
   cmp al, 00100000b
   je diverge
; left to right
; right to left
; count up
; count down
; converging led
; diverging led
;
; 
   
   jmp MAIN
;---------------------------------------- led left to right 01h
ledmode:
   mov cx, 8
   mov dx, LED
   mov al, 10000000b
   out dx, al
   call pause
ledshift:  
   shr al, 1
   out dx, al
   call pause
   loop ledshift
   jmp MAIN
;---------------------------------------- led right to left 02h
ledmode2:
   mov cx, 8
   mov dx, LED
   mov al, 00000001b
   out dx, al
   call pause
ledshift2:
   shl al, 1
   out dx, al
   call pause
   loop ledshift2
   jmp MAIN
   ;---------------------------------------- converging lights
converge:
   
   mov dx, LED
   mov al, 10000001b
   out dx, al
   call pause
   mov al, 11000011b
   out dx, al
   call pause
   mov al, 11100111b
   out dx, al
   call pause
   mov al, 11111111b
   out dx, al
   call pause
   jmp MAIN
      ;---------------------------------------- diverging lights
diverge:
   
   mov dx, LED
   mov al, 00011000b
   out dx, al
   call pause
   mov al, 00111100b
   out dx, al
   call pause
   mov al, 01111110b
   out dx, al
   call pause
   mov al, 11111111b
   out dx, al
   call pause
  
   jmp MAIN
;------------------------------------------ count up 7seg 03h
segmode:
   mov si, offset DIGITS
   mov cx, 10
   
   nextdigit:
   mov dx, SEG_PORT
   mov al, [si]
   out dx, al
   call pause
   inc si
   loop nextdigit
   
   ;clear display
   XOR AL, AL
   out dx, al
   jmp MAIN
;------------------------------------ count down 7 seg   
segmode2:
   mov si, offset DIGITSBALI
   mov cx, 10
   
   nextdigit2:
   mov dx, SEG_PORT
   mov al, [si]
   out dx, al
   call pause
   inc si
   loop nextdigit2
   
   xor al, al
   out dx, al
   jmp MAIN

pause proc
   mov bx, 9fffh
   delay:
      dec bx
      nop
      jnz delay
      ret
pause endp 
   
   
ENDLESS:
        JMP ENDLESS
CODE    ENDS
        END START